name: Publish to caprover

on:
  push:
    branches: ["master"]
  pull_request:
    branches: ["master"]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  bumpver:
    runs-on: ubuntu-latest
    outputs:
      current_version: ${{ steps.bumpver.outputs.current_version }}
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: 3.12

      - name: Install bumpver
        run: |
          python -m pip install --upgrade pip
          python -m pip install bumpver

      - name: Configure git to push
        run: |
          git config --global user.email "actions@users.noreply.github.com"
          git config --global user.name "Automated Publisher"

      - name: Bump Version
        id: bumpver
        run: |
          bumpver update
          eval $(bumpver show --env)
          echo "{current_version}=$CURRENT_VERSION" >> $GITHUB_OUTPUT

      - name: Push Release Build to GitHub
        run: |
          git push

          jobs:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Preset Image Name
        run: echo "IMAGE_URL=$(echo ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}:$(echo ${{ github.sha }} | cut -c1-7) | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV

      - name: Build and push Docker Image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ env.IMAGE_URL }}

      - name: Deploy Image to CapRrover
        uses: caprover/deploy-from-github@v1.1.2
        with:
          server: "${{ secrets.CAPROVER_SERVER }}"
          app: "${{ secrets.APP_NAME }}"
          token: "${{ secrets.APP_TOKEN }}"
          image: ${{ env.IMAGE_URL }}
