
volumes:
  dev_postgres_data: {}
  prod_postgres_data: {}
  prod_postgres_data_backups: {}
  prod_django_media: {}

services:
  django:
    build:
      context: .
      dockerfile: ./Dockerfile
      target: production
    init: true
    image: gbd_prod_django
    volumes:
      - prod_django_media:/app/gbd/media
    depends_on:
      postgres:
        condition: "service_started"
    env_file:
      - .env
    command: [/start]

  dev:
    build:
      context: .
      dockerfile: ./Dockerfile
      target: development
    profiles: [dev]
    init: true
    image: gbd_dev_django
    depends_on:
      postgres:
        condition: "service_started"
    environment:
      - DEBUG=true
    env_file:
      - .env
    volumes:
      - .:/app:z
    ports:
      - "8000:8000"
    command: [/start-dev]

  postgres:
    build:
      context: .
      dockerfile: ./docker/postgres/Dockerfile
    image: gbd_postgres
    volumes:
      - prod_postgres_data:/var/lib/postgresql/data
      - dev_postgres_data:/var/lib/postgresql/dev-data
      - prod_postgres_data_backups:/backups
    env_file:
      - .env

  nginx-proxy:
    image: jwilder/nginx-proxy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - prod_django_media:/usr/share/nginx/media:ro
      - /var/run/docker.sock:/tmp/docker.sock:ro
    restart: always
    depends_on:
      - django

  # docs:
  #   image: gbd_docs
  #   profiles: [docs]
  #   container_name: gbd_local_docs
  #   build:
  #     context: .
  #     dockerfile: ./compose/local/docs/Dockerfile
  #   env_file:
  #     - .env
  #   volumes:
  #     - ./docs:/docs:z
  #     - ./config:/app/config:z
  #     - ./gbd:/app/gbd:z
  #   ports:
  #     - "9000:9000"
  #   command: /start-docs
